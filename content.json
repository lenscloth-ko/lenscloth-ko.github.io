{"meta":{"title":"lenscloth.io blog","subtitle":"lenscloth v2 dev","description":"blog","author":"jklee@lenscloth.io","url":"https://lenscloth-ko.github.io.git"},"pages":[],"posts":[{"title":"Hello World","slug":"hello-world","date":"2018-12-17T08:07:12.064Z","updated":"2018-12-17T08:07:12.064Z","comments":true,"path":"2018/12/17/hello-world/","link":"","permalink":"https://lenscloth-ko.github.io.git/2018/12/17/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"PR, PO(Purchase Order, 구매 발주)","slug":"PR-PO-Purchase-Order-구매-발주","date":"2018-10-29T04:24:48.000Z","updated":"2018-12-18T04:25:36.251Z","comments":true,"path":"2018/10/29/PR-PO-Purchase-Order-구매-발주/","link":"","permalink":"https://lenscloth-ko.github.io.git/2018/10/29/PR-PO-Purchase-Order-구매-발주/","excerpt":"","text":"Order Sheet와 같은 뜻으로 사용되는 용어로서 일종의 개별계약서이다. 매매계약이 성립된 후에 계약내용을 확인하기 위하여 수입업자가 작성하여 수출업자에게 송부한다. PR POP.O : PURCHASE ORDER (구매 발주)B.O.M : BILL OF MATERIAL (도면상에 표기하는 재질 등을 비롯한 자재 정보 리스트)P.O.R (PR) : PURCHASE ORDER REQUISITION (구매 발주 요청서)POR은 설계쪽에서 발행하여 구매로 보내는 구매발주요청서이며,BOM(자재목록표)와 POS(구매사양서,Purchase Order Specification)과 같이 보냅니다. POS는 구매물품의 규격등을 표시한 도면이나 자료 등을 말하구요.POR을 접수한 구매에서는 업체로 PO(구매발주서)를 보내지요.","categories":[{"name":"MES","slug":"MES","permalink":"https://lenscloth-ko.github.io.git/categories/MES/"}],"tags":[{"name":"PR","slug":"PR","permalink":"https://lenscloth-ko.github.io.git/tags/PR/"},{"name":"PO","slug":"PO","permalink":"https://lenscloth-ko.github.io.git/tags/PO/"}]},{"title":"Silo","slug":"Silo","date":"2018-10-29T04:23:04.000Z","updated":"2018-12-18T04:24:27.503Z","comments":true,"path":"2018/10/29/Silo/","link":"","permalink":"https://lenscloth-ko.github.io.git/2018/10/29/Silo/","excerpt":"","text":"풋바심 작물이나 목초를 채워 엔실리지(ensilage)를 만들기 위하여 돌·벽돌·콘크리트 등으로 만든 저장고. 저장탑. 순화어는 저장탑&#39;,저장 창고’. 2018-11-05 추가 시작 사일로는 단순하게 저장을 위한 용도이기도 하지만 그 저장 이라는 의미가 다음공정으로 가기위한 대기상태인 경우가 많은듯 합니다, 흔히 말하는 창고 개념은 아니었더라고요, 포장 사일로 이런식으로 표현하면 포장되기위한 공정에 직전에있는 저장상태 정도로 인식하면 될듯하고 배합 사일로 이건 1개의 원료가 아닐때 혼합을 위한 사일로 용도로도 사용되는듯 합니다 화학 공정을 정확하게 아직 이해한 상태는 아니지만 저장탑, 저장 창고 처럼 위에 명시한 용도로 사용되는건 산업군마다 느낌이 조금씩은 다른듯 합니다. 2018-11-05 추가 끝 2018-11-21 추가 스타크레프트 1 하다보니..(심심해서 ….) 테란 핵 만들면 옆에 붙는게 nuclear silo 였다","categories":[{"name":"MES","slug":"MES","permalink":"https://lenscloth-ko.github.io.git/categories/MES/"}],"tags":[{"name":"Silo","slug":"Silo","permalink":"https://lenscloth-ko.github.io.git/tags/Silo/"},{"name":"저장고","slug":"저장고","permalink":"https://lenscloth-ko.github.io.git/tags/저장고/"}]},{"title":"WMS (Warehouse Management System, 창고관리시스템)","slug":"WMS-Warehouse-Management-System-창고관리시스템","date":"2018-10-25T04:20:54.000Z","updated":"2018-12-18T04:22:32.585Z","comments":true,"path":"2018/10/25/WMS-Warehouse-Management-System-창고관리시스템/","link":"","permalink":"https://lenscloth-ko.github.io.git/2018/10/25/WMS-Warehouse-Management-System-창고관리시스템/","excerpt":"","text":"WMS(Warehouse Management System)은 기업 ’전체 재고 에 대한 가시성을 제공하고 제조 업체 또는 도매 유통 업체부터 물류 창고, 소매 유통 업체, 그리고 마지막으로 매장 진열대에 이르기까지 공급망 주문 이행 업무를 관리하는 소프트웨어 솔루션입니다 ORACLEWMS","categories":[{"name":"MES","slug":"MES","permalink":"https://lenscloth-ko.github.io.git/categories/MES/"}],"tags":[{"name":"WMS","slug":"WMS","permalink":"https://lenscloth-ko.github.io.git/tags/WMS/"}]},{"title":"EP(Engineering Plastics, 엔지니어링 플라스틱)","slug":"EP-Engineering-Plastics-엔지니어링-플라스틱","date":"2018-10-25T04:18:32.000Z","updated":"2018-12-18T04:20:36.237Z","comments":true,"path":"2018/10/25/EP-Engineering-Plastics-엔지니어링-플라스틱/","link":"","permalink":"https://lenscloth-ko.github.io.git/2018/10/25/EP-Engineering-Plastics-엔지니어링-플라스틱/","excerpt":"","text":"EP라는 약어를 사용하는 용어는 아마 엄청 많을것이지만….지금 화학MES 공정에서 자주 등장하는 EP가 무엇일까 찾아보다가 정리합니다.일반 플라스틱의 물적 특성과 비슷하지만, 내열성과 내구성이 보다 뛰어나서 ‘고기능성 플라스틱’이라고도 불립니다. 그래서 전자기기의 케이스나 자동차의 외장 부품 등에 자주 사용되죠. LG케미토피아 블로그인터뷰 내용중","categories":[{"name":"MES","slug":"MES","permalink":"https://lenscloth-ko.github.io.git/categories/MES/"}],"tags":[{"name":"EP","slug":"EP","permalink":"https://lenscloth-ko.github.io.git/tags/EP/"},{"name":"Engineering Plastics","slug":"Engineering-Plastics","permalink":"https://lenscloth-ko.github.io.git/tags/Engineering-Plastics/"},{"name":"화학","slug":"화학","permalink":"https://lenscloth-ko.github.io.git/tags/화학/"},{"name":"기초소재","slug":"기초소재","permalink":"https://lenscloth-ko.github.io.git/tags/기초소재/"}]},{"title":"Serial 통신","slug":"Serial-통신","date":"2018-10-24T04:17:27.000Z","updated":"2018-12-18T04:18:13.885Z","comments":true,"path":"2018/10/24/Serial-통신/","link":"","permalink":"https://lenscloth-ko.github.io.git/2018/10/24/Serial-통신/","excerpt":"","text":"시리얼이란?시리얼은 거의 모든 PC에서 표준으로 사용되는 디바이스 통신 프로토콜입니다. 시리얼의 개념을 USB의 개념과 잘 구분하십시오. 대부분의 컴퓨터에는 2개의 RS232 기반 시리얼 포트가 있습니다. 시리얼은 또한 여러가지 디바이스에서 계측을 위한 일반 통신 프로토콜이며, 여러 GPIB 호환 디바이스에는 RS232 포트가 장착되어 있습니다. 뿐만 아니라, 원격 샘플링 디바이스로 데이터 수집을 하는 경우에도 시리얼 통신을 사용할 수 있습니다. 시리얼 통신의 개념은 간단합니다. 시리얼 포트는 정보의 바이트를 한번에 한 비트씩 순차적으로 송수신합니다. 한번에 전체 바이트를 동시에 전달하는 병렬 통신과 비교하면 시리얼 통신은 속도가 느리지만 훨씬 간단하며 장거리에도 사용할 수 있습니다. 예를 들어, 병렬 통신용 IEEE 488 스펙을 보면 기기간 케이블링은 총 20 m 미만이어야 하며, 두 개의 디바이스간은 2 m 미만이어야 합니다. 반면 시리얼 통신은 최대 1.2 Km의 통신거리를 보장합니다. 통상 엔지니어들은 ASCII 데이터를 전송할 때 시리얼 통신을 사용합니다. 이 때 송신용 (Tx), 수신용 (Rx), 그라운드용 (GND)의 세 가지의 전송 라인을 사용하여 통신합니다. 시리얼은 비동기식이므로 포트는 한 라인에서 데이터를 전송하고 다른 라인에서 데이터를 수신합니다. 핸드쉐이킹용 라인도 사용 가능하지만 필수 요구사항은 아닙니다. 시리얼 통신의 가장 중요한 특징에는 보드 속도 (baud rate), 데이터 비트, 정지 비트, 패리티가 있습니다. 두 개의 포트가 통신하기 위해서는 이러한 파라미터가 반드시 적절하게 맞춰져야 합니다. 보드 속도는 통신의 속도를 측정하는 수치이며 초당 비트 전송 숫자로 표시됩니다. 예를 들어 300 보드 속도는 초당 300 비트를 의미합니다. 엔지니어들이 흔히 말하는 클럭 주기는 보드 속도를 의미합니다. 따라서 프로토콜에 4800 보드 속도라고 나오는 경우 클럭이 4800 Hz로 작동한다는 뜻입니다. 즉, 시리얼 포트는 4800 Hz로 데이터 라인을 샘플링합니다. 전화선의 일반적인 보드 속도는 14400, 28800 또는 33600입니다. 보다 높은 속도도 가능하지만 그 경우 디바이스를 분리할 수 있는 거리가 줄어들게 됩니다. 따라서 엔지니어들은 디바이스가 같은 장소에 위치해 있는 디바이스 통신에 높은 보드 속도를 사용하게 되며, 그 예로 GPIB 디바이스를 들 수 있습니다.데이터 비트는 전송되는 실제 데이터 비트의 측정값을 의미합니다. 컴퓨터가 정보 패킷을 보낼 때 실제 데이터의 양은 전체 8 비트가 되지 않습니다. 데이터 패킷의 표준 값은 5, 7, 8비트입니다. 어떤 정보를 전송하느냐에 따라 어떤 세팅을 선택할 지를 결정해야 합니다. 예를 들어, 표준 ASCII는 0 ~127 (7 비트)의 값을 가집니다. 확장된 ASCII는 0 ~ 255 (8 비트)를 사용합니다. 전송하려는 데이터가 단순 텍스트 (표준 ASCII)일 경우, 패킷당 7비트의 데이터를 보내면 통신에 무리가 없습니다. 패킷은 단일 바이트 전송을 의미하며, 시작/정지 비트, 데이터 비트, 패리티가 포함됩니다. 실제 비트의 수는 선택된 프로토콜에 따라 달라지므로 모든 경우를 포괄하는 “패킷”이라는 용어를 사용합니다.정지 비트는 단일 패킷에 대한 통신의 종료를 알리는 데 사용됩니다. 일반적인 값은 1, 1.5, 2 비트입니다. 데이터는 모든 라인을 통해 클럭되며 각 디바이스에는 고유의 클럭이 있기 때문에 두 개의 디바이스는 동기화가 되지 않을 가능성이 있습니다. 따라서 정지 비트는 전송의 종료를 알려줄 뿐 아니라 클럭 속도 오류를 방지하기 위한 완충 역할을 합니다. 더욱 많은 비트가 정지 비트에 쓰이면 다른 클럭을 동기화할 수 있지만 데이터 전송 속도는 느려집니다.패리티는 시리얼 통신에서 에러를 체크하는 데 사용됩니다. 패리티에는 짝수, 홀수, 마크, 스페이스 패리티의 네 가지 형태가 있습니다. “패리티 없음”을 사용할 수도 있습니다. 짝수 및 홀수 패리티를 이용하면, 시리얼 포트는 패리티 비트 (데이터 비트 뒤에 따라옴)를 특정 값으로 설정함으로써 전송에 logic-high bits가 짝수개 또는 홀수개 있음을 나타냅니다. 예를 들어, 데이터가 011이고 짝수 패리티를 선택했다면 logic-high bits가 짝수개 있으면 패리티 비트는 0 입니다. 홀수 패리티를 선택했다면 logic-high bits가 홀수개 (3개)이므로 패리티 비트는 1이 됩니다. 마크 패리티와 스페이스 패리티는 데이터 비트를 체크하는 기능이 없으며 단지 마크 패리티의 경우 패리티를 높게, 스페이스 패리티의 경우 패리티를 낮게 설정합니다. 따라서 수신 디바이스가 비트의 상태를 확인할 수 있게 되므로 소음으로 인한 데이터 방해 여부나 송수신 디바이스 클럭 동기화 여부 등을 알 수 있습니다. RS232 개요RS232는 IBM 호환 PC에서 쓰이는 시리얼 연결입니다. 엔지니어들은 컴퓨터를 센서 또는 모뎀에 연결하거나 계측기 컨트롤 등 여러 용도로 RS232를 사용합니다. RS232 하드웨어는 최장 15 m (50 ft)까지 통신 가능하며, PC 시리얼 포트와 디바이스간 포인트 투 포인트 연결로만 사용이 국한됩니다. 이러한 이유로 인해 추가의 RS232 시리얼 포트가 요구되기도 합니다. 표준 PC RS232 시리얼 포트 및 여러 시리얼 인터페이스 공급업체는 시리얼 통신에서 데이터 송수신에 Win32 API를 사용합니다. Win32 API는 원래 모뎀 통신을 위해 개발되었으며 전체 RS232 프로토콜을 실행하지 않으므로 특정 디바이스와 통신할 수 없습니다. 내쇼날인스트루먼트는 PCI, USB, PCMCIA, ExpressCard, PXI, 이더넷 등 여러 다양한 플랫폼에서 RS232 시리얼 인터페이스를 제공합니다. 플랫폼에 따라 NI Serial 인터페이스는 1, 2, 4, 8 및 16 포트 버전으로 사용 가능합니다. 또한, NI RS232 시리얼 인터페이스는 최고 1 Mb/s의 고속 보드 속도, DMA 전송을 통한 CPU 최소 사용, 최적화된 2000 V 포트간 절연, 구성 가능한 비표준 보드 속도와 같은 향상된 기능을 제공합니다. NI의 모든 시리얼 인터페이스에는 NI-Serial 드라이버 소프트웨어가 포함되므로 전체 RS232 프로토콜을 실행하고, 신속한 어플리케이션 개발을 위한 하이레벨, 사용하기 쉬운 함수를 제공합니다. 라고 합니다 ( 발췌본입니다 ) 포장 공정에서 라벨프린터에 PLC랑 I/F를 위한 기반작업중이라 남겨놓습니다.!!","categories":[{"name":"MES","slug":"MES","permalink":"https://lenscloth-ko.github.io.git/categories/MES/"}],"tags":[{"name":"Serial Port","slug":"Serial-Port","permalink":"https://lenscloth-ko.github.io.git/tags/Serial-Port/"},{"name":"RS232C","slug":"RS232C","permalink":"https://lenscloth-ko.github.io.git/tags/RS232C/"}]},{"title":"EIF (External Interface Files, 외부연계파일)","slug":"EIF-External-Interface-Files-외부연계파일","date":"2018-10-22T04:15:47.000Z","updated":"2018-12-18T04:16:42.965Z","comments":true,"path":"2018/10/22/EIF-External-Interface-Files-외부연계파일/","link":"","permalink":"https://lenscloth-ko.github.io.git/2018/10/22/EIF-External-Interface-Files-외부연계파일/","excerpt":"","text":"외부연계파일(EIF)은 사용자가 식별할 수 있는 논리적으로 연관된 데이터 그룹 또는 제어정보로, 다른 어플리케이션의 경계 내부에서 유지되고 측정 대상 어플리케이션이 참조한다. 외부연계파일(EIF)의 주요 의도는 측정 대상 어플리케이션 경계 내의 하나 또는 그 이상의 단위 프로세스를 통하여 참조된 데이터를 보관하는데 있다. 이것은 특정 어플리케이션에서 외부연계파일(EIF)로 측정된 것은 반드시 다른 어플리케이션의 내부논리파일에 존재해야 함을 의미한다. 이라는데 확실히 감이 안잡히네요…2018-11-21 추가 EIF라는게 물리적은 파일일줄 알았는데….S/W형태로 EIF 서버를 구축해서 PLC나 마킹기 전자저울 등의 정보를 수집하는 망을 통한 I/F를 프레임웍화 해놓은 하나의 시스템을 말하는 경우가 많다는걸 알았습니다…UI EIF서버 PLC(마킹기 등등..)의 정보전달을 전담하는 역활을 하더라고요..","categories":[{"name":"MES","slug":"MES","permalink":"https://lenscloth-ko.github.io.git/categories/MES/"}],"tags":[{"name":"EIF","slug":"EIF","permalink":"https://lenscloth-ko.github.io.git/tags/EIF/"}]},{"title":"SCM(Supply Chain Management, 공급망 관리)","slug":"SCM-Supply-Chain-Management-공급망-관리","date":"2018-10-18T04:14:08.000Z","updated":"2018-12-18T04:15:18.293Z","comments":true,"path":"2018/10/18/SCM-Supply-Chain-Management-공급망-관리/","link":"","permalink":"https://lenscloth-ko.github.io.git/2018/10/18/SCM-Supply-Chain-Management-공급망-관리/","excerpt":"","text":"공급망관리 연구실 (Operations &amp; Supply Chain Management Laboratory)에서는생산 시스템의 계획에서부터 운영 및 물류에 이르는 생산에 관련된전반적인 분야를 연구하고 있다. 산업공학이 다루는 여러 가지 학문 분야 중에서도공급망관리, 재고관리, 일정계획, 시뮬레이션을 다루고 있으며제조업체 및 서비스업체의 공급망에 대한 최적 설계와 운영 전략 제시를 연구하고 있다. 주로 사용하는 기법은 수리계획법, 휴리스틱 및 메타휴리스틱 기법, 시뮬레이션을 사용하고 있으며,프로토타입 시스템 개발도 수행하고 있다. 연구 과제들을 수행하기 위하여 Tex, Gauss, Arena, Siman, Lindo, Lingo 등의 주요 소프트웨어와Visual Basic, Delphi, C, C++, Visual C++, Java, C#, API, MS SQL,등의프로그래밍 언어들을 활용하고 있다.","categories":[{"name":"MES","slug":"MES","permalink":"https://lenscloth-ko.github.io.git/categories/MES/"}],"tags":[{"name":"SCM","slug":"SCM","permalink":"https://lenscloth-ko.github.io.git/tags/SCM/"}]},{"title":"NCR(Non-Conformance Report, 부적합사항보고서)","slug":"NCR-Non-Conformance-Report-부적합사항보고서","date":"2018-10-17T02:57:53.000Z","updated":"2018-12-18T04:13:22.419Z","comments":true,"path":"2018/10/17/NCR-Non-Conformance-Report-부적합사항보고서/","link":"","permalink":"https://lenscloth-ko.github.io.git/2018/10/17/NCR-Non-Conformance-Report-부적합사항보고서/","excerpt":"","text":"부적합의 기준은 공정, 산업마다 다르겠지만 규정(규격에 맞지 않는)되지 않은 부적합품 발생시, Lot No, 수량, 부적합 발생 내용 등을 적는 보고서 라고 합니다. 보고서 작성 이후 프로세스를 통하여 그냥 사용할지, 폐기할지 등의 결정이 됩니다, 또한 이후에 검사(검증)절차와 시험을 다시 시행해야 한다고 합니다. PNCR이란 말도 들어본듯 한데, Process-NCR로 받아들여지긴 하는데 아직은 잘 모르겠네요.","categories":[{"name":"MES","slug":"MES","permalink":"https://lenscloth-ko.github.io.git/categories/MES/"}],"tags":[{"name":"NCR","slug":"NCR","permalink":"https://lenscloth-ko.github.io.git/tags/NCR/"},{"name":"PNCR","slug":"PNCR","permalink":"https://lenscloth-ko.github.io.git/tags/PNCR/"},{"name":"QMS","slug":"QMS","permalink":"https://lenscloth-ko.github.io.git/tags/QMS/"}]},{"title":"RTDB(Real-Time Database, 실시간 DB)","slug":"RTDB-Real-Time-Database-실시간-DB","date":"2018-10-16T02:56:05.000Z","updated":"2018-12-18T02:57:28.632Z","comments":true,"path":"2018/10/16/RTDB-Real-Time-Database-실시간-DB/","link":"","permalink":"https://lenscloth-ko.github.io.git/2018/10/16/RTDB-Real-Time-Database-실시간-DB/","excerpt":"","text":"제 입장에서 RTDB보단 RDB(Relational Database, 관계형 DB)가 익숙합니다 뭐 Oracle이나 MS-SQL, MariaDB 같은걸 사용해왔으니까요… 사실 이 글을 작성하는 (2018-10-16) 기준으로는 RDB도 실시간이지 않나? 라는 생각을 해봅니다만은..ㅠㅠ 그래서 용처에따른 구분을 하고싶어서 검색해본 결과로는RTDB (Real-Time Database)는 현장의 운전 데이터 (Process Variable, Set Point, Output, Mode, 등)를 실시간으로 수집하여 저장하여 시스템입니다. 주로 RTDB의 데이터는 Time Stamp, Tag, Description, Value, Confidence를 가진 단순 데이터로써, ORACLE / MS-SQL 같은 RDB (Relational DataBase) 보다는 사용자가 찾을 때 빠르게 데이터를 지원할 수 있도록 시간 순으로 ASCII 형태로 차곡 차곡 쌓아놓는 방식으로 저장 합니다. 물론, Tag 관련 정보 (Tag Name, Description, Data Type, Range, Set Value, 등)는 RDB에 저장하는 것이 효과적입니다. 따라서 잘 설계된 RTDB는 RDB와 상호 연결이 쉽도록 구성되어 있습니다. 또한, RTDB는 전문가가 아닌 현업을 잘 알고 있는 공정 엔지니어들이 운전 / 이력 / 생산 / 경보 / 설비 관리를 위하여 쉽게 할 수 있도록 다양한 Application 기능들이 포함되어 있어야 합니다. DB사랑넷RTDB에서 읽었던 댓글이 이해가 빠르게 되더라고요. 실제로 이번 참여하고있는 MES프로젝트에서도 RTDB의 용도는 현장의 운전데이터에 집중되어 사용되고 있네요","categories":[{"name":"MES","slug":"MES","permalink":"https://lenscloth-ko.github.io.git/categories/MES/"}],"tags":[{"name":"RTDB","slug":"RTDB","permalink":"https://lenscloth-ko.github.io.git/tags/RTDB/"}]},{"title":"DCS ( Distributed Control System, 분산제어시스템)","slug":"DCS-Distributed-Control-System-분산제어시스템","date":"2018-10-16T02:54:11.000Z","updated":"2018-12-18T02:55:38.953Z","comments":true,"path":"2018/10/16/DCS-Distributed-Control-System-분산제어시스템/","link":"","permalink":"https://lenscloth-ko.github.io.git/2018/10/16/DCS-Distributed-Control-System-분산제어시스템/","excerpt":"","text":"공정제어에 적용되는 시스템을 각 플랜트에 알맞은 단위 서브 시스템으로 분리하고 소단위 시스템에서는 각각의 주어진 역활을 수행하며, 상호간에 통신이 가능하도록 하는 시스템이라고 합니다. 참고링크","categories":[{"name":"MES","slug":"MES","permalink":"https://lenscloth-ko.github.io.git/categories/MES/"}],"tags":[{"name":"DCS","slug":"DCS","permalink":"https://lenscloth-ko.github.io.git/tags/DCS/"}]},{"title":"PLC (Programmable Logic Controller, 프로그램 가능 로직 제어기)","slug":"PLC-Programmable-Logic-Controller-프로그램-가능-로직-제어기","date":"2018-10-16T02:52:51.000Z","updated":"2018-12-18T02:53:49.713Z","comments":true,"path":"2018/10/16/PLC-Programmable-Logic-Controller-프로그램-가능-로직-제어기/","link":"","permalink":"https://lenscloth-ko.github.io.git/2018/10/16/PLC-Programmable-Logic-Controller-프로그램-가능-로직-제어기/","excerpt":"","text":"산업 플랜트의 자동 제어 및 감시에 사용하기 위한 장치라고 합니다. 단독으로 쓰일 수도 있지만, SCADA 등의 시스템과 함께 사용되기도 한다고 하네요. 제어장치의 일종으로 초기 자동화시스템에서 회로도에따라 릴레이, 접점, 타이머, 카운터 등을 직접 접속하여 사용했는데 다품종 소량생산에 대응을 위해서 많은 시간과 비용이 요구되기 때문에 이를 유연하게 대처할 수 있는 방안으로 등장했다고도 합니다. 정말 쉽게는 그냥 각 고정 기기에서 연결된 수행 내용을 작성해서 저장해두면 각종 기계나 공정을 제어하게 해주는 PC같은거 라고 생각하면 될듯 합니다. 아두이노나…..라즈페리파이도 PLC같은거로 사용할 수 있을까요 ㅎㄷㄷ??(역활은 비슷한거같은데 ;)","categories":[{"name":"MES","slug":"MES","permalink":"https://lenscloth-ko.github.io.git/categories/MES/"}],"tags":[{"name":"PLC","slug":"PLC","permalink":"https://lenscloth-ko.github.io.git/tags/PLC/"}]},{"title":"생산전략 (MTS, MTO)","slug":"생산전략-MTS-MTO","date":"2018-10-16T02:07:42.000Z","updated":"2018-12-18T02:08:49.268Z","comments":true,"path":"2018/10/16/생산전략-MTS-MTO/","link":"","permalink":"https://lenscloth-ko.github.io.git/2018/10/16/생산전략-MTS-MTO/","excerpt":"","text":"MTS(Make-to-Stock, 계획 생산 방식), MTO(Make-to-Order, 주문 생산 방식) MTO : Make to Order - 주문 생산 방식 고객주문 요청 시점부터 생산을 시작하는 방식이라고 합니다, 요청의 수용범위는 낮으며 생산속도는 빠르다고 합니다, 원하는 것만 생산하기 때문에 낭비가 적고 다양한 요구가 증대되기에 신제품 출시 재고/비용 절감등의 효과를 볼 수 있는 방식이라고 합니다. MTS : Make to Stock - 계획 생산 박싱 그럼 MTO가 좋아보이는데…이런 개념이 나왔을까 하긴 했었는데 상황에 따라서 사용되기도 한다고 합니다. , 일단 확보된 재고를 다 판매하게 될지는 알수없는건 당연하겠지만 재고자체의 가치가 달라지는 상황에따른 손익이 발생할 수 있으며 최악은 그저 재고로만 남게되는 경우도 있을 수 있겠네요 이를 위해서 재고관리를 좀더 신경써야 하는 방식이라고 합니다.","categories":[{"name":"MES","slug":"MES","permalink":"https://lenscloth-ko.github.io.git/categories/MES/"}],"tags":[{"name":"MTS","slug":"MTS","permalink":"https://lenscloth-ko.github.io.git/tags/MTS/"},{"name":"MTO","slug":"MTO","permalink":"https://lenscloth-ko.github.io.git/tags/MTO/"},{"name":"생산전략","slug":"생산전략","permalink":"https://lenscloth-ko.github.io.git/tags/생산전략/"},{"name":"주문생산","slug":"주문생산","permalink":"https://lenscloth-ko.github.io.git/tags/주문생산/"},{"name":"재고생산","slug":"재고생산","permalink":"https://lenscloth-ko.github.io.git/tags/재고생산/"}]},{"title":"BOM(Bill Of Material, 자재명세서)","slug":"BOM-Bill-Of-Material-자재명세서","date":"2018-10-15T01:57:16.000Z","updated":"2018-12-18T02:02:00.224Z","comments":true,"path":"2018/10/15/BOM-Bill-Of-Material-자재명세서/","link":"","permalink":"https://lenscloth-ko.github.io.git/2018/10/15/BOM-Bill-Of-Material-자재명세서/","excerpt":"","text":"자재 명세서 (Bill of Materials, BOM)은 제품을 구성하는 모든 부품들에 대한 목록이다. 부품이 복잡한 요소들로 구성되어 있는 조립품인 경우에는 계층적인 구조로 작성될 수 있다. 위키자재 명세서 BOM, MMD, PLM 등의 단어를 엄청 들어보면서 먼저 BOM을 정리해봅니다..기준정보 라고 불리는 ERP를 포함한 도메인에서 관리하는 정보형태 같습니다. BOM과 처방전을 화학에서는 같이 사용하던데 느낌상 BOM은 최초 발행된 조합정보이며 처방전은 실제 생산하면서 배합양 비율등이 조정되는 업데이트 되는 정보라고 이해하고있습니다.","categories":[{"name":"MES","slug":"MES","permalink":"https://lenscloth-ko.github.io.git/categories/MES/"}],"tags":[{"name":"BOM","slug":"BOM","permalink":"https://lenscloth-ko.github.io.git/tags/BOM/"},{"name":"Bill Of Meterial","slug":"Bill-Of-Meterial","permalink":"https://lenscloth-ko.github.io.git/tags/Bill-Of-Meterial/"},{"name":"자재명세서","slug":"자재명세서","permalink":"https://lenscloth-ko.github.io.git/tags/자재명세서/"}]},{"title":"Lot No, Batch No","slug":"Lot-No-Batch-No","date":"2018-10-11T01:49:53.000Z","updated":"2018-12-18T01:55:32.940Z","comments":true,"path":"2018/10/11/Lot-No-Batch-No/","link":"","permalink":"https://lenscloth-ko.github.io.git/2018/10/11/Lot-No-Batch-No/","excerpt":"","text":"제조단위는 동일한 조건 아래에서 만들어진 균일한 특성 및 품질을 갖는 제품군이다. 로트(lot), 배치(batch)라고도 한다. 제조단위를 나타내는 번호를 제조단위번호라고 하며 제조번호, 로트번호(lot number), 배치번호(batch number)라고도 한다. 위키제조 단위 흠..제일 많이 듣는말중에 하나인듯하고 역시 lot tracking (로트 추적)에 관련된 대화 이슈들이 많이 들립니다. lot number (로트 번호)가 같다 라는 개념을 1개의 공정에서 나온 결과물에 부여되는 일련번호 라고 이해하고있는 상황이며 AAA 라는 고유제품코드를 가진 제품이 있으며 이것이 3개의 라인(같은공정)에서 생산되고있으면1라인 : AAA-012라인 : AAA-023라인 : AAA-03이런식으로 구분한다 라는 정도로 이해하고 있습니다 ㅋㅋ 맞나 ㅠㅠ lot 번호를 부여하는 방식은 기업마다 Rule을 정해서 부여하는듯 하며 이를 통합 Barcode시스템연동시 부여된 번호를 관리하는 포인트가 생기는듯 합니다. lot 번호의 목적은 역으로 추적하기 위함이 가장 많은듯 하다(현재 까지 종합해본 결론은…), 불량이 나거나 결과물에 문제 발생시 몇날 몇일 몇시즈음에 어느공정에서 문제가 생긴건지 를 알기위함이 가장크게 적용되는듯 합니다… Batch = 생산계획에 의해 한번 셋팅으로 생산하는 단위Lot = 그 Batch에 이어 나오는 제품 단위를 의미 아직은 이렇게 이해하고 접근하고 있지만 마침 제가 담당하게 될 부분이 통합라벨관리(채번까지인지 ..ㅠ?)가 되어서 앞으로 도 확실히 정리해야 하겠습니다~","categories":[{"name":"MES","slug":"MES","permalink":"https://lenscloth-ko.github.io.git/categories/MES/"}],"tags":[{"name":"Lot No","slug":"Lot-No","permalink":"https://lenscloth-ko.github.io.git/tags/Lot-No/"},{"name":"Batch No","slug":"Batch-No","permalink":"https://lenscloth-ko.github.io.git/tags/Batch-No/"}]},{"title":"MES(생산관리시스템, Manufacturing Execution System)","slug":"MES-생산관리시스템-Manufacturing-Execution-System","date":"2018-10-10T01:30:58.000Z","updated":"2018-12-18T01:36:11.437Z","comments":true,"path":"2018/10/10/MES-생산관리시스템-Manufacturing-Execution-System/","link":"","permalink":"https://lenscloth-ko.github.io.git/2018/10/10/MES-생산관리시스템-Manufacturing-Execution-System/","excerpt":"","text":"MES는 Manufacturing Execution System 의 약어라고 합니다. 생산관리시스템 / 제조실행시스템 으로 불리고 있더라고요 정확한 표현은 추후에라도 업데이트 하겠습니다. 우선 저처럼 MES의 약어가 무엇인가 부터 찾으시는분들을 위해 제가 먼저 검색해보고 잘 이해가 되었던 링크를 하나 공유해 드리겠습니다. 미라콤 이라는 회사 웹사이트에 가보면 다양한 정보가 있더라고요특히 MES란 무엇인가? 라는 카툰으로된 설명이 이해하기가 쉬웠습니다.참고로 전 이 기업과 전혀 관계가 없습니다! 처음에는 공장자동화(Factory Automation)? 비스무리한 개념으로 접근을 했었습니다…사실 관점에 따라 다르겠지만(저도 검색하다보니 엄청 난감하고 아직도 정리가 안끝나더라고요) 비슷하게 혼동이 가던 개념이 스마트팩토리(Smart Factory) 였습니다…이걸 사무환경으로 그대로 옮겨서 이해를 하려고 노력을 해봤는데요…이렇습니다…. 사무자동화(Office Automation)와 스마트오피스(Smart Office)? 가 있다고 가정을 하고 -_-; 회사에서 연/월차 등의 업무처리에 인쇄물 직접 서면보고 형식의 프로세스를 가지고있다 라고 가정을 해 봤습니다(요즘은 잘 없겠죠~?)…제가 이런 프로세스의 회사에서 초창기에 근무한적이 있었습니다… 누가 힘드냐!!! 가야할사람 : 결제권자 만나기 겁나 힘들고 이거 들고가면 꼭 이상한 일정체크와 농담해서 사람 민망하게 합니다..결제권자 : 허…이놈이 분명 내일까지 할일이 있는데…계속 찾아와서 좀 쉬자고 들이댑니다…경리부 대리누나(그땐 막내였거든요 ㅎ) : 연말마다 연차보상비 계산하느라 몇일밤 집에도 못가고 계산기 다 뚜드리고 정리끝나서 갈려고 하면 “아 찾았어요 이러고 겁나들 몰려옵니다 - _-좀비WAR!!”경리부 책임이사님 : 경리부 대리누나한테 이아이는 왜 우리회사 지급일수보다 3일을 더 쉬었니? 라며 보상비를 받아오라 하십니다 ㅋㅋㅋㅋ그냥 억울한 사람 : 분명 그날 제출도 하고 결제도 하고 다했는데….그날 급한업무 때문에 못 쉬었는데….그날이 몇일이었는지…(월요일날 출근해서 토요일 점심먹고 집에가고 이랬는데!!!) 기억이 안나서 그냥 쉰걸로 치고 마음을 비웠더니 경리부 책임이사님이 보상비 내노라고 버럭버럭 하십니다 ㅋㅋ사장님 : 내돈이….이것들 양심에 따라 지급되는 느낌이라 자선사업가가 된 느낌입니다 ;;웃자고 쓴…..실화입니다 ㅡㅡ……..이직 후에는 그룹웨어가 잘(?) 되어있어서 이런일들이 모두 전자결제를 통한 업무처리 프로세스가 도입되어 있었습니다. 이로써 위에 해프닝에서 일어난 누수라고 볼 수 있는 것들(시간/인력, 부정확한 정보로 인한 데이터 관리불가와 정보의 신뢰도 하락 등등등등등….)을 막을 수 있는 좋은 페러다임이 사무자동화의 한 축이었다고 생각할 수 있다..라고 저는 생각해 봅니다 이를 공장자동화로 매칭을 시켜봤습니다..물론 많은 차이가 있고 전문분야도 아니기때문에 어설프게 이해한 상황일지도 모릅니다. 이번엔 정말 이해를 위한 억지 이해를 써야할듯 해서 죄송스럽지만….적어보겠습니다 어떤 웹사이트 프로젝트가 기획/개발/디자인/퍼블리싱 구간 어디까지 진행되고있는지를 회의에서 물어보시는 사장님의 기습공격을 받은 사람이 어……..그룹웨어에는 지금 투입인력 전체비용 프로젝트기간 외에는 그런 자세한 정보가 나와있지 않아서 나와있고 아는 부분만 답변을 하게됩니다……당연히 알아야하는 PM역활 등의 사람들이야 숙지하고 있겠지만 외에 관련자/확인자 등은 확인하려면 역시나 해당 관련업무 숙지자를 만나야 정확한 상황을 파악 할 수 있습니다. 이는 역시 또다른 투입인력과 인력운영에 여러가지 누수가 생기게 됩니다(직원들이야 좋쵸 ㅋㅋㅋㅋ…그런데 회사 망하면 힘들잖아요 ㅠㅠ), 이에 스마트 오피스라는 프로세스를 도입하기로 마음먹고 이에 각 직군별 자세한 진행상황을 확인할 수 있게 됩니다..이는 투입인력이 과부하 상황에서 어려움을 겪는지 혹은 과투입되어 비용이 낭비되고있는지 등의 확인이 수월해 질 수 있습니다. 이를 즉 스마트 오피스로 대입해서 이해한 상황입니다. 정말 말이 앞뒤도 안맞고 이상하다고 저도 느끼지만…저는 아직 이정도 수준이라 ㅠㅠ 크흠…급 정색하지만 MES는 이러한 스마트오피스 와 완전 일치되는 개념은 아닌듯 하지만 별개로 해당 공정을 정보화하며 모니터링하고 문제(제품의 품질, 공정상 불량)를 추적가능하게 하는 시스템에 속하는 하나의 작은 서브 시스템 이라고 이해하고 시작하기로 했습니다. 와서 진짜 깜짝놀란건 모든 용어가 처음듣고 용어들을 모르면 대화가 어렵다는 점 이었습니다, 지금은 다행이 PI기간이고 제가 적응할 시간이 있는참이어서 디테일한 정보습득을 정말 부지런하게 메모하고있는 와중입니다, 아마 용어만 정리해도 엄청날듯 합니다…QMS, WMA, ERP, Silo, 등등등..수도 없습니다..ㄷㄷㄷㄷㄷ 앞으로도 정리하면서 공부하겠지만 처음이니만큼 사설이 반인듯 했네요……. 많은 지적 부탁드리고 첫 기고글에서 많은 변화가 있으리라 생각합니다(정확한 개념을 잡으면 수정하겠습니다). 읽어주셔서 감사합니다.","categories":[{"name":"MES","slug":"MES","permalink":"https://lenscloth-ko.github.io.git/categories/MES/"}],"tags":[{"name":"MES","slug":"MES","permalink":"https://lenscloth-ko.github.io.git/tags/MES/"}]},{"title":"Life Cycle of TempData in ASP.Net MVC","slug":"Life-Cycle-of-TempData-in-ASP-Net-MVC","date":"2016-01-24T15:53:12.000Z","updated":"2018-12-17T16:04:59.867Z","comments":true,"path":"2016/01/25/Life-Cycle-of-TempData-in-ASP-Net-MVC/","link":"","permalink":"https://lenscloth-ko.github.io.git/2016/01/25/Life-Cycle-of-TempData-in-ASP-Net-MVC/","excerpt":"","text":"12345678910111213141516171819202122232425public ActionResult ViewInfo(string memId, CommonModel param)&#123;//파라미터가 없는 접근을 차단if (!NoParamValueCheck(memId))&#123;return RedirectToAction(\"NoParameterValue\", \"Home\");&#125; MemberView M = new MemberView&#123;CommonParam = param,MemberInfo = _MemberService.MemberView(memId, MemberInfo.GetMemberGradeCode(), param)&#125;; //의도적인 예외처리if (M.MemberInfo == null)&#123;CustomLog4Net customLog = new CustomLog4Net();customLog.ErrorToLog(this.ControllerContext);return RedirectToAction(\"WrongParameterValue\", \"Home\");&#125; return View(M);&#125; 상세화면 -&gt; 수정화면 -&gt; 수정완료 -&gt; 다시 상세화면 이라는 시나리오상에서 void형 EditProc Controller를 사용했지만 실제로 프로시저에서는 @returnValue 라는 int형 결과를 리턴하는 상황입니다 Model에서 부터 out Parameter로 결과를 받는 변수를 받아왔으며 실제 EditProc Controller는1return RedirectToAction(\"ViewInfo\", new &#123; memId = dto.memId, viewParam = param &#125;);를 리턴합니다, 이때 ViewBag으로 결과값을 유지할 줄…았았습니다 이게 저에게는 애매한 부분이었어서 TempData로 경했던 과정과 이유를 남겨놓습니다.html bootstrap template 같은거 찾아보면 1회 휘발성 notification box 등을 많이 제공하더라고요 PHP나 Classic ASP같은거로 작업한다고 하면 catch처리를 했던 기억이 있네요…왜 그렇게 무식하게 했었을까요….그게 더 공수가 들어갔거든요..각설하고 View.cshtml에서view.cshtml1resultNum TempData : @TempData[\"resultNum\"]이렇게 TempData를 호출하면 새로고침시 정보가 사라지는 현상을 볼 수 있습니다…여기서 TempData의 구간은 Controller Controller 이렇게 명시되어 있습니다, ViewBag, ViewData와는 확실히 용도가 분리되어있습니다.TempData.Keep 등으로 생명 주기를 연장도 가능합니다, 그런데..특별한 사유가 아니라면 사용할 일이 없어보이네요.사실 말이 거창합니다만..아래와같은 시나리오 입니다..","categories":[{"name":"Web","slug":"Web","permalink":"https://lenscloth-ko.github.io.git/categories/Web/"},{"name":"ASP.Net MVC","slug":"Web/ASP-Net-MVC","permalink":"https://lenscloth-ko.github.io.git/categories/Web/ASP-Net-MVC/"}],"tags":[{"name":"MVC4","slug":"MVC4","permalink":"https://lenscloth-ko.github.io.git/tags/MVC4/"},{"name":"TempData","slug":"TempData","permalink":"https://lenscloth-ko.github.io.git/tags/TempData/"},{"name":"C#","slug":"C","permalink":"https://lenscloth-ko.github.io.git/tags/C/"}]},{"title":"MSSQL-sp_send_dbmail(Transact-SQL)","slug":"MSSQL-sp-send-dbmail-Transact-SQL","date":"2015-12-02T15:44:07.000Z","updated":"2018-12-17T15:50:21.203Z","comments":true,"path":"2015/12/03/MSSQL-sp-send-dbmail-Transact-SQL/","link":"","permalink":"https://lenscloth-ko.github.io.git/2015/12/03/MSSQL-sp-send-dbmail-Transact-SQL/","excerpt":"","text":"MSSQL에서 자동메일을 특별한 양식없이 알림성으로 받기 좋은 방법이 있습니다, sp_send_dbmail 이라고 하는 놈인데요 이게 express버전에서는 메뉴가 없습니다, 정품을 사용하고 설치옵션에서 해당사항을 체크해야 보이더라고요데이터베이스 메일 &gt; 데이터베이스 메일구성 에서 없으면 등록하면 됩니다설정은 끝입니다, POP3 설정이랑 비슷하죠? 당연히 SMTP설정은 되어있어야 합니다.SQL Server 에이전트 설정을 해주시면 됩니다 이제이후 Batch Job을 걸어서 호출하는 방식 입니다.1234567891011121314151617181920212223242526272829303132333435363738394041sp_configure 'show advanced options', 1sp_configure 'show advanced options', 1goreconfiguregosp_configure 'Database Mail XPs',1goreconfigurego use msdbgo declare @body_str varchar(2000); set @body_str = '메일이 ' + @@SERVERNAME + '로 부터 발송되었습니다.'set @body_str = @body_str + ''set @body_str = @body_str + '발송 시간 : ' + cast(getdate() as varchar(20)) + ''set @body_str = @body_str + '발송 머신 : ' + HOST_NAME() + ''set @body_str = @body_str + ''set @body_str = @body_str + '감사합니다.' exec msdb.dbo.sp_send_dbmail @profile_name = 'UserEmailSender' ,@recipients = 'jklee@wylie.co.kr' ,@subject = '데이터베이스 메일 보내기 테스트' ,@body = @body_str ,@body_format = 'html'; ----------결과조회 use msdb select *from sysmail_mailitems select *from sysmail_log결국 메일에 따라서 스팸으로 가기도 하겠지만 양식 맞추는게 노가다성으로 보여지긴 합니다만 저는 이거 하나로 매일 받아야하는 알림을 약 2년여간 아주 잘 활용했었습니다.","categories":[{"name":"DB","slug":"DB","permalink":"https://lenscloth-ko.github.io.git/categories/DB/"},{"name":"MSSQL","slug":"DB/MSSQL","permalink":"https://lenscloth-ko.github.io.git/categories/DB/MSSQL/"}],"tags":[{"name":"db mail","slug":"db-mail","permalink":"https://lenscloth-ko.github.io.git/tags/db-mail/"},{"name":"SP_SEND_DBMAIL","slug":"SP-SEND-DBMAIL","permalink":"https://lenscloth-ko.github.io.git/tags/SP-SEND-DBMAIL/"}]},{"title":"MS Outlook Email 관리 AddIn - 4","slug":"MS-Outlook-Email-관리-AddIn-4","date":"2015-10-25T15:16:38.000Z","updated":"2018-12-17T15:42:25.896Z","comments":true,"path":"2015/10/26/MS-Outlook-Email-관리-AddIn-4/","link":"","permalink":"https://lenscloth-ko.github.io.git/2015/10/26/MS-Outlook-Email-관리-AddIn-4/","excerpt":"","text":"크흛..정말 별거 아니네요…그래도 좋은 공부였습…크흛..ㅠㅠ","categories":[{"name":"C#.Net","slug":"C-Net","permalink":"https://lenscloth-ko.github.io.git/categories/C-Net/"},{"name":"VSTO","slug":"C-Net/VSTO","permalink":"https://lenscloth-ko.github.io.git/categories/C-Net/VSTO/"}],"tags":[{"name":"MS Office AddIn","slug":"MS-Office-AddIn","permalink":"https://lenscloth-ko.github.io.git/tags/MS-Office-AddIn/"},{"name":"Outlook","slug":"Outlook","permalink":"https://lenscloth-ko.github.io.git/tags/Outlook/"}]},{"title":"MS Outlook Email 관리 AddIn - 3","slug":"MS-Outlook-Email-관리-AddIn-3","date":"2015-10-24T15:16:38.000Z","updated":"2018-12-17T15:33:08.616Z","comments":true,"path":"2015/10/25/MS-Outlook-Email-관리-AddIn-3/","link":"","permalink":"https://lenscloth-ko.github.io.git/2015/10/25/MS-Outlook-Email-관리-AddIn-3/","excerpt":"","text":"ManageTaskPeneRibbon 메뉴로 I/F는 XML로 XML은 Web프로젝트 얼른 하나 만들어서 거기서 대충 관리하는 식으로 만들었습니다..","categories":[{"name":"C#.Net","slug":"C-Net","permalink":"https://lenscloth-ko.github.io.git/categories/C-Net/"},{"name":"VSTO","slug":"C-Net/VSTO","permalink":"https://lenscloth-ko.github.io.git/categories/C-Net/VSTO/"}],"tags":[{"name":"MS Office AddIn","slug":"MS-Office-AddIn","permalink":"https://lenscloth-ko.github.io.git/tags/MS-Office-AddIn/"},{"name":"Outlook","slug":"Outlook","permalink":"https://lenscloth-ko.github.io.git/tags/Outlook/"}]},{"title":"MS Outlook Email 관리 AddIn - 2","slug":"MS-Outlook-Email-관리-AddIn-2","date":"2015-10-23T15:16:38.000Z","updated":"2018-12-17T15:33:05.166Z","comments":true,"path":"2015/10/24/MS-Outlook-Email-관리-AddIn-2/","link":"","permalink":"https://lenscloth-ko.github.io.git/2015/10/24/MS-Outlook-Email-관리-AddIn-2/","excerpt":"","text":"이런식으로..새 전자 메일 작성시 우측에 트리구조로…넣습니다..벼..별거 아닌듯 보입니다 ㅠㅠ","categories":[{"name":"C#.Net","slug":"C-Net","permalink":"https://lenscloth-ko.github.io.git/categories/C-Net/"},{"name":"VSTO","slug":"C-Net/VSTO","permalink":"https://lenscloth-ko.github.io.git/categories/C-Net/VSTO/"}],"tags":[{"name":"MS Office AddIn","slug":"MS-Office-AddIn","permalink":"https://lenscloth-ko.github.io.git/tags/MS-Office-AddIn/"},{"name":"Outlook","slug":"Outlook","permalink":"https://lenscloth-ko.github.io.git/tags/Outlook/"}]},{"title":"MS Outlook Email 관리 AddIn - 1","slug":"MS-Outlook-Email-관리-AddIn-1","date":"2015-10-22T15:16:38.000Z","updated":"2018-12-17T15:20:47.573Z","comments":true,"path":"2015/10/23/MS-Outlook-Email-관리-AddIn-1/","link":"","permalink":"https://lenscloth-ko.github.io.git/2015/10/23/MS-Outlook-Email-관리-AddIn-1/","excerpt":"","text":"목적 나의 삽질 능력 테스트 사용대상 일반 회사원중 아웃룩을 다시깔때 깊은 빡침을 느끼는자 개발환경 VS2015 VSTO Tools for Office 2015 예상 아웃룩에 메뉴를 추가 기타 웹 등에서 관리된 메일을 불러와서 사용 되..될까..??","categories":[{"name":"C#.Net","slug":"C-Net","permalink":"https://lenscloth-ko.github.io.git/categories/C-Net/"},{"name":"VSTO","slug":"C-Net/VSTO","permalink":"https://lenscloth-ko.github.io.git/categories/C-Net/VSTO/"}],"tags":[{"name":"MS Office AddIn","slug":"MS-Office-AddIn","permalink":"https://lenscloth-ko.github.io.git/tags/MS-Office-AddIn/"},{"name":"Outlook","slug":"Outlook","permalink":"https://lenscloth-ko.github.io.git/tags/Outlook/"}]},{"title":"ASP.Net MVC4 BundleConfig에서 min.js 혹은 사용자 지정 css 등이 적용되지 않을 때","slug":"ASP-Net-MVC4-BundleConfig에서-min-js-혹은-사용자-지정-css-등이-적용되지-않을-때","date":"2014-05-28T15:08:21.000Z","updated":"2018-12-17T15:14:24.639Z","comments":true,"path":"2014/05/29/ASP-Net-MVC4-BundleConfig에서-min-js-혹은-사용자-지정-css-등이-적용되지-않을-때/","link":"","permalink":"https://lenscloth-ko.github.io.git/2014/05/29/ASP-Net-MVC4-BundleConfig에서-min-js-혹은-사용자-지정-css-등이-적용되지-않을-때/","excerpt":"","text":"BundleConfig class123456public static void RegisterBundles(BundleCollection bundles)&#123; bundles.Add(new ScriptBundle(\"~/Scripts/jquery\") .Include(\"~/Scripts/jquery-1.8.0.js\") .Include(\"~/Scripts/jquery.tmpl.min.js\")); &#125; html 코드12345&lt;html&gt; &lt;head&gt; @Scripts.Render(\"~/Scripts/jquery\") &lt;/head&gt;&lt;body&gt;test&lt;/body&gt;&lt;/html&gt; html 랜더링 후123456&lt;html&gt; &lt;head&gt; &lt;script src=\"/Scripts/jquery-1.8.0.js\"&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt;test&lt;/body&gt;&lt;/html&gt; 이렇게 BundleConfig에서 지정한 local이나 외부 js나 css파일이 랜더링 면서 동작을 안하는 듯한?? 모습이 보일때가 있더라고요.. 이거 debug모드 혹은 localhost에서는..이런 버그가 있답니다…참고하세요","categories":[{"name":"Web","slug":"Web","permalink":"https://lenscloth-ko.github.io.git/categories/Web/"},{"name":"ASP.Net MVC","slug":"Web/ASP-Net-MVC","permalink":"https://lenscloth-ko.github.io.git/categories/Web/ASP-Net-MVC/"}],"tags":[{"name":"MVC4","slug":"MVC4","permalink":"https://lenscloth-ko.github.io.git/tags/MVC4/"},{"name":"BundleConfig","slug":"BundleConfig","permalink":"https://lenscloth-ko.github.io.git/tags/BundleConfig/"}]},{"title":"MSSQL-CTE 재귀쿼리 - MSSQL2005 이상","slug":"MSSQL-CTE-재귀쿼리-MSSQL2005-이상","date":"2012-12-06T15:03:47.000Z","updated":"2018-12-17T15:06:32.589Z","comments":true,"path":"2012/12/07/MSSQL-CTE-재귀쿼리-MSSQL2005-이상/","link":"","permalink":"https://lenscloth-ko.github.io.git/2012/12/07/MSSQL-CTE-재귀쿼리-MSSQL2005-이상/","excerpt":"","text":"트리구조 등을 표현하려고 사용하다가, 메뉴나 코드관리에서 자주 사용했던 쿼리이며 List&lt;&gt;형태를 가져오기 위해 써먹었던놈입니다. 123456789101112131415161718WITH 지정이름CTE(menuCode, menuName, isPopup, menuURL, sortNo, menuLevel)AS(SELECT menuCode, menuName, isPopup, menuURL, sortNo, 1 AS menuLevelFROM 테이블명 WITH(NOLOCK)WHERE 조건 UNION ALL SELECT A.menuCode, A.menuName, A.isPopup, A.menuURL, A.sortNo, menuLevel + 1 AS menuLevelFROM 테이블명 A WITH(NOLOCK) INNER JOIN지정이름CTE B ON A.menuParentCode = B.menuCodeWHERE 조건)SELECT menuCode, menuName, isPopup, menuURL, sortNo, menuLevelFROM 지정이름CTE WITH(NOLOCK)ORDER BY sortNoOPTION (MAXRECURSION 10) 첫번째 호출되는 결과집합(UNION ALL)을 만들고 하단 결과집합이 빈 집합이 될때까지 반복하는 원리입니다.","categories":[{"name":"DB","slug":"DB","permalink":"https://lenscloth-ko.github.io.git/categories/DB/"},{"name":"MSSQL","slug":"DB/MSSQL","permalink":"https://lenscloth-ko.github.io.git/categories/DB/MSSQL/"}],"tags":[{"name":"CTE","slug":"CTE","permalink":"https://lenscloth-ko.github.io.git/tags/CTE/"},{"name":"재귀쿼리","slug":"재귀쿼리","permalink":"https://lenscloth-ko.github.io.git/tags/재귀쿼리/"}]},{"title":"MSSQL Bulk Insert","slug":"MSSQL-Bulk-Insert","date":"2012-10-18T14:54:16.000Z","updated":"2018-12-17T15:02:41.364Z","comments":true,"path":"2012/10/18/MSSQL-Bulk-Insert/","link":"","permalink":"https://lenscloth-ko.github.io.git/2012/10/18/MSSQL-Bulk-Insert/","excerpt":"","text":"참고링크 12345678910111213BEGIN TRANBULK INSERT 디비명.소유자.테이블명 FROM '경로를 포함한 파일명'WITH (DATAFILETYPE = 'char', --이건 텍스트 형태로 한다는거입니다.FIELDTERMINATOR = '\\t', --필드 구분자가 TAB으로 분리되어있는 형식입니다.ROWTERMINATOR = '\\r\\n', --행 구분자가 케리지 리턴으로 되어있는 형태입니다.FIRSTROW = 2 --여긴 첫번째 행은 해당 필드명이 넘어오기때문에 2번째부터 읽자 머 이런의미로 넣은겁니다--KEEPNULLS)IF(@@ERROR &lt;&gt; 0)ROLLBACK TRANELSECOMMIT TRAN 사용법은 간단합니다.270만건 기준 15초 평균 정도가 소요되네요.","categories":[{"name":"DB","slug":"DB","permalink":"https://lenscloth-ko.github.io.git/categories/DB/"},{"name":"MSSQL","slug":"DB/MSSQL","permalink":"https://lenscloth-ko.github.io.git/categories/DB/MSSQL/"}],"tags":[{"name":"Bulk Insert","slug":"Bulk-Insert","permalink":"https://lenscloth-ko.github.io.git/tags/Bulk-Insert/"}]},{"title":"ASP RSS 읽어오기","slug":"ASP-RSS-읽어오기","date":"2008-08-21T14:46:39.000Z","updated":"2018-12-17T14:47:35.188Z","comments":true,"path":"2008/08/21/ASP-RSS-읽어오기/","link":"","permalink":"https://lenscloth-ko.github.io.git/2008/08/21/ASP-RSS-읽어오기/","excerpt":"","text":"12345678910111213141516171819202122232425262728Dim xmlHttpSet xmlHttp = Server.CreateObject(\"MSXML2.XMLHTTP.3.0\")xmlHttp.Open \"Get\", RSS주소(받아들일), falsexmlHttp.Send()'받아서 저장 ( 이게 요즘은 익숙하져? ㅋㅋ )Dim RSSXMLRSSXML = xmlHttp.ResponseText'분할을 위해 DOM객채로 저장합니다 ( 안그래도 상관없는데... 이게더 좋은거 같습니다 )Dim xmlDOMSet xmlDOM = Server.CreateObject(\"MSXML2.DomDocument.3.0\")xmlDOM.async = falsexmlDOM.LoadXml(RSSXML)'요건 센스 ㅋㅋSet xmlHttp = Nothing'DOM으로 저장한 객체중 item 노드로 뽑아내고 생성했던 객체는 소멸합니다.Dim RSSItemsSet RSSItems = xmlDOM.getElementsByTagName(\"item\")Set xmlDOM = Nothing'이 이후에 이제 배열의 갯수 - 1개로 돌려서 'items(i,0) : title'items(i,1) : link'items(i,2) : description'items(i,3) : category'items(i,4) : author'items(i,5) : guid'items(i,6) : comments'items(i,7) : pubdate","categories":[{"name":"Web","slug":"Web","permalink":"https://lenscloth-ko.github.io.git/categories/Web/"},{"name":"Classic ASP","slug":"Web/Classic-ASP","permalink":"https://lenscloth-ko.github.io.git/categories/Web/Classic-ASP/"}],"tags":[{"name":"RSS","slug":"RSS","permalink":"https://lenscloth-ko.github.io.git/tags/RSS/"},{"name":"Classic ASP","slug":"Classic-ASP","permalink":"https://lenscloth-ko.github.io.git/tags/Classic-ASP/"},{"name":"ASP","slug":"ASP","permalink":"https://lenscloth-ko.github.io.git/tags/ASP/"}]},{"title":"Google AdSense 수입!","slug":"Google-AdSense-수입","date":"2007-12-04T14:49:26.000Z","updated":"2018-12-17T14:53:23.835Z","comments":true,"path":"2007/12/04/Google-AdSense-수입/","link":"","permalink":"https://lenscloth-ko.github.io.git/2007/12/04/Google-AdSense-수입/","excerpt":"","text":"요즘들어 수입이 영..;;-_- 역시 홈페이지 뻑쩍지근하게 다시 만들어봐야겠구나 ㅠㅠ언제만들어서 언제다 정리해서 언제다 옮기냐~! ㅠㅠ","categories":[{"name":"Web","slug":"Web","permalink":"https://lenscloth-ko.github.io.git/categories/Web/"}],"tags":[{"name":"Google AdSense","slug":"Google-AdSense","permalink":"https://lenscloth-ko.github.io.git/tags/Google-AdSense/"}]},{"title":"ASP RSS 만들기","slug":"ASP-RSS-만들기","date":"2007-11-09T14:25:10.000Z","updated":"2018-12-17T14:48:17.994Z","comments":true,"path":"2007/11/09/ASP-RSS-만들기/","link":"","permalink":"https://lenscloth-ko.github.io.git/2007/11/09/ASP-RSS-만들기/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091Response.ContentType = \"text/xml\"Set xmlPars = Server.CreateObject(\"Msxml2.DOMDocument\")'여기서 부터 rss 정보를 담는다.Set rss = xmlPars.CreateElement(\"rss\")rss.setAttribute \"version\", \"2.0\"rss.setAttribute \"xmlns:dc\", \"http://purl.org/dc/elements/1.1/\"rss.setAttribute \"xmlns:sy\", \"http://purl.org/rss/1.0/modules/syndication/\"rss.setAttribute \"xmlns:admin\", \"http://webns.net/mvcb/\"rss.setAttribute \"xmlns:rdf\", \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"xmlPars.AppendChild(rss)'&lt;channel&gt; 시작Set Channel = xmlPars.CreateElement(\"channel\")rss.AppendChild(Channel) '&lt;title&gt;정보Set title = xmlPars.CreateElement(\"title\")Channel.AppendChild(title)Channel.childnodes(0).text = \"사이트명(체널제목으로 들어가는 부분)\" '제목'&lt;link&gt;정보Set channel_link = xmlPars.CreateElement(\"link\")Channel.AppendChild(channel_link)Channel.childnodes(1).text = \"사이트의 도메인 혹은 체널제공 카테고리의 메인주소\" '주소 '&lt;description&gt;정보Set description = xmlPars.CreateElement(\"description\")Channel.AppendChild(description)Channel.childnodes(2).text = \"사이트 설명\" '설명 '&lt;dc:language&gt;정보Set language = xmlPars.CreateElement(\"dc:language\")Channel.AppendChild(language)Channel.childnodes(3).text = \"ko\" '언어 '&lt;image&gt;정보'Set image = xmlPars.CreateElement(\"image\")'Channel.AppendChild(image) '이미지 정보에 들어갈 것들'set i_title = xmlPars.CreateElement(\"title\")'set i_url = xmlPars.CreateElement(\"url\")'set i_width = xmlPars.CreateElement(\"width\")'set i_height = xmlPars.CreateElement(\"height\")'image.AppendChild(i_title)'image.AppendChild(i_url)'image.AppendChild(i_width)'image.AppendChild(i_height)'image.childnodes(0).text = \"이미지 제목\"'image.childnodes(1).text = \"이미지 경로\"'image.childnodes(2).text = \"이미지 가로 사이즈\"'image.childnodes(3).text = \"이미지 세로 사이즈\" '여기서부터 내용'우선 데이터를 읽어오자objconn = \"Provider=SQLOLEDB; Data Source=DB주소; Initial Catalog=DB명; User ID=아이디; Password=비밀번호;\"SQL = \"select top 50 필드1, 필드2 … \"SQL = SQL &amp; \" , 필드x, 필드y …\"SQL = SQL &amp; \" from 테이블명 \"SQL = SQL &amp; \" where 조건 \"SQL = SQL &amp; \" order by 어쩌구 desc \"set rs = Server.CreateObject(\"ADODB.Recordset\")rs.Open SQL,objconn,3'여기서 부터 루프를 돌리자.Do until rs.EOF'이 부분에서 데이터 가공 및 함수호출을 이용한 정보 가공을 하면 된다'ex) Name = rs(1) 이런식으로 ㅋㅋㅋ'&lt;item&gt; 이라는 노드를 추가Set item = xmlPars.CreateElement(\"item\")Channel.AppendChild(item)'여기서부터 해당 포스트의 세부 정보를 출력set title = xmlPars.CreateElement(\"title\") 'set link = xmlPars.CreateElement(\"link\")set description = xmlPars.CreateElement(\"description\")set dcdate = xmlPars.CreateElement(\"dc:date\")set dcsubject = xmlPars.CreateElement(\"dc:subject\")item.AppendChild(title)item.AppendChild(link)item.AppendChild(description)item.AppendChild(dcdate)item.AppendChild(dcsubject)item.childnodes(0).text = \"1개의 포스트(게시글)의 제목\" '제목item.childnodes(1).text = \"고유 주소\" '브라우저 주소입력창에 쳤을때 바로 그 페이지가 나오게끔 하는 주소item.childnodes(2).text = \"본문내용\" '내용 필드item.childnodes(3).text = \"등록일\" '날짜 필드item.childnodes(4).text = \"카테고리 혹은 분류할 수 있는 테그명 등…\" '분류 필드rs.movenextloop'마지막으로 최종적으로 뿌려주자.Response.Write xmlPars.xmlrs.closeset rs = nothingSet xmlPars = nothing","categories":[{"name":"Web","slug":"Web","permalink":"https://lenscloth-ko.github.io.git/categories/Web/"},{"name":"Classic ASP","slug":"Web/Classic-ASP","permalink":"https://lenscloth-ko.github.io.git/categories/Web/Classic-ASP/"}],"tags":[{"name":"RSS","slug":"RSS","permalink":"https://lenscloth-ko.github.io.git/tags/RSS/"},{"name":"Classic ASP","slug":"Classic-ASP","permalink":"https://lenscloth-ko.github.io.git/tags/Classic-ASP/"},{"name":"ASP","slug":"ASP","permalink":"https://lenscloth-ko.github.io.git/tags/ASP/"}]}]}