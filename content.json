{"meta":{"title":"lenscloth.io blog","subtitle":"lenscloth v2 dev","description":"blog","author":"jklee@lenscloth.io","url":"https://lenscloth-ko.github.io.git"},"pages":[],"posts":[{"title":"Hello World","slug":"hello-world","date":"2018-12-17T08:07:12.064Z","updated":"2018-12-17T08:07:12.064Z","comments":true,"path":"2018/12/17/hello-world/","link":"","permalink":"https://lenscloth-ko.github.io.git/2018/12/17/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"MES(생산관리시스템, Manufacturing Execution System)","slug":"MES-생산관리시스템-Manufacturing-Execution-System","date":"2018-10-10T01:30:58.000Z","updated":"2018-12-18T01:36:11.437Z","comments":true,"path":"2018/10/10/MES-생산관리시스템-Manufacturing-Execution-System/","link":"","permalink":"https://lenscloth-ko.github.io.git/2018/10/10/MES-생산관리시스템-Manufacturing-Execution-System/","excerpt":"","text":"MES는 Manufacturing Execution System 의 약어라고 합니다. 생산관리시스템 / 제조실행시스템 으로 불리고 있더라고요 정확한 표현은 추후에라도 업데이트 하겠습니다. 우선 저처럼 MES의 약어가 무엇인가 부터 찾으시는분들을 위해 제가 먼저 검색해보고 잘 이해가 되었던 링크를 하나 공유해 드리겠습니다. 미라콤 이라는 회사 웹사이트에 가보면 다양한 정보가 있더라고요특히 MES란 무엇인가? 라는 카툰으로된 설명이 이해하기가 쉬웠습니다.참고로 전 이 기업과 전혀 관계가 없습니다! 처음에는 공장자동화(Factory Automation)? 비스무리한 개념으로 접근을 했었습니다…사실 관점에 따라 다르겠지만(저도 검색하다보니 엄청 난감하고 아직도 정리가 안끝나더라고요) 비슷하게 혼동이 가던 개념이 스마트팩토리(Smart Factory) 였습니다…이걸 사무환경으로 그대로 옮겨서 이해를 하려고 노력을 해봤는데요…이렇습니다…. 사무자동화(Office Automation)와 스마트오피스(Smart Office)? 가 있다고 가정을 하고 -_-; 회사에서 연/월차 등의 업무처리에 인쇄물 직접 서면보고 형식의 프로세스를 가지고있다 라고 가정을 해 봤습니다(요즘은 잘 없겠죠~?)…제가 이런 프로세스의 회사에서 초창기에 근무한적이 있었습니다… 누가 힘드냐!!! 가야할사람 : 결제권자 만나기 겁나 힘들고 이거 들고가면 꼭 이상한 일정체크와 농담해서 사람 민망하게 합니다..결제권자 : 허…이놈이 분명 내일까지 할일이 있는데…계속 찾아와서 좀 쉬자고 들이댑니다…경리부 대리누나(그땐 막내였거든요 ㅎ) : 연말마다 연차보상비 계산하느라 몇일밤 집에도 못가고 계산기 다 뚜드리고 정리끝나서 갈려고 하면 “아 찾았어요 이러고 겁나들 몰려옵니다 - _-좀비WAR!!”경리부 책임이사님 : 경리부 대리누나한테 이아이는 왜 우리회사 지급일수보다 3일을 더 쉬었니? 라며 보상비를 받아오라 하십니다 ㅋㅋㅋㅋ그냥 억울한 사람 : 분명 그날 제출도 하고 결제도 하고 다했는데….그날 급한업무 때문에 못 쉬었는데….그날이 몇일이었는지…(월요일날 출근해서 토요일 점심먹고 집에가고 이랬는데!!!) 기억이 안나서 그냥 쉰걸로 치고 마음을 비웠더니 경리부 책임이사님이 보상비 내노라고 버럭버럭 하십니다 ㅋㅋ사장님 : 내돈이….이것들 양심에 따라 지급되는 느낌이라 자선사업가가 된 느낌입니다 ;;웃자고 쓴…..실화입니다 ㅡㅡ……..이직 후에는 그룹웨어가 잘(?) 되어있어서 이런일들이 모두 전자결제를 통한 업무처리 프로세스가 도입되어 있었습니다. 이로써 위에 해프닝에서 일어난 누수라고 볼 수 있는 것들(시간/인력, 부정확한 정보로 인한 데이터 관리불가와 정보의 신뢰도 하락 등등등등등….)을 막을 수 있는 좋은 페러다임이 사무자동화의 한 축이었다고 생각할 수 있다..라고 저는 생각해 봅니다 이를 공장자동화로 매칭을 시켜봤습니다..물론 많은 차이가 있고 전문분야도 아니기때문에 어설프게 이해한 상황일지도 모릅니다. 이번엔 정말 이해를 위한 억지 이해를 써야할듯 해서 죄송스럽지만….적어보겠습니다 어떤 웹사이트 프로젝트가 기획/개발/디자인/퍼블리싱 구간 어디까지 진행되고있는지를 회의에서 물어보시는 사장님의 기습공격을 받은 사람이 어……..그룹웨어에는 지금 투입인력 전체비용 프로젝트기간 외에는 그런 자세한 정보가 나와있지 않아서 나와있고 아는 부분만 답변을 하게됩니다……당연히 알아야하는 PM역활 등의 사람들이야 숙지하고 있겠지만 외에 관련자/확인자 등은 확인하려면 역시나 해당 관련업무 숙지자를 만나야 정확한 상황을 파악 할 수 있습니다. 이는 역시 또다른 투입인력과 인력운영에 여러가지 누수가 생기게 됩니다(직원들이야 좋쵸 ㅋㅋㅋㅋ…그런데 회사 망하면 힘들잖아요 ㅠㅠ), 이에 스마트 오피스라는 프로세스를 도입하기로 마음먹고 이에 각 직군별 자세한 진행상황을 확인할 수 있게 됩니다..이는 투입인력이 과부하 상황에서 어려움을 겪는지 혹은 과투입되어 비용이 낭비되고있는지 등의 확인이 수월해 질 수 있습니다. 이를 즉 스마트 오피스로 대입해서 이해한 상황입니다. 정말 말이 앞뒤도 안맞고 이상하다고 저도 느끼지만…저는 아직 이정도 수준이라 ㅠㅠ 크흠…급 정색하지만 MES는 이러한 스마트오피스 와 완전 일치되는 개념은 아닌듯 하지만 별개로 해당 공정을 정보화하며 모니터링하고 문제(제품의 품질, 공정상 불량)를 추적가능하게 하는 시스템에 속하는 하나의 작은 서브 시스템 이라고 이해하고 시작하기로 했습니다. 와서 진짜 깜짝놀란건 모든 용어가 처음듣고 용어들을 모르면 대화가 어렵다는 점 이었습니다, 지금은 다행이 PI기간이고 제가 적응할 시간이 있는참이어서 디테일한 정보습득을 정말 부지런하게 메모하고있는 와중입니다, 아마 용어만 정리해도 엄청날듯 합니다…QMS, WMA, ERP, Silo, 등등등..수도 없습니다..ㄷㄷㄷㄷㄷ 앞으로도 정리하면서 공부하겠지만 처음이니만큼 사설이 반인듯 했네요……. 많은 지적 부탁드리고 첫 기고글에서 많은 변화가 있으리라 생각합니다(정확한 개념을 잡으면 수정하겠습니다). 읽어주셔서 감사합니다.","categories":[{"name":"MES","slug":"MES","permalink":"https://lenscloth-ko.github.io.git/categories/MES/"}],"tags":[{"name":"MES","slug":"MES","permalink":"https://lenscloth-ko.github.io.git/tags/MES/"}]},{"title":"Life Cycle of TempData in ASP.Net MVC","slug":"Life-Cycle-of-TempData-in-ASP-Net-MVC","date":"2016-01-24T15:53:12.000Z","updated":"2018-12-17T16:04:59.867Z","comments":true,"path":"2016/01/25/Life-Cycle-of-TempData-in-ASP-Net-MVC/","link":"","permalink":"https://lenscloth-ko.github.io.git/2016/01/25/Life-Cycle-of-TempData-in-ASP-Net-MVC/","excerpt":"","text":"12345678910111213141516171819202122232425public ActionResult ViewInfo(string memId, CommonModel param)&#123;//파라미터가 없는 접근을 차단if (!NoParamValueCheck(memId))&#123;return RedirectToAction(\"NoParameterValue\", \"Home\");&#125; MemberView M = new MemberView&#123;CommonParam = param,MemberInfo = _MemberService.MemberView(memId, MemberInfo.GetMemberGradeCode(), param)&#125;; //의도적인 예외처리if (M.MemberInfo == null)&#123;CustomLog4Net customLog = new CustomLog4Net();customLog.ErrorToLog(this.ControllerContext);return RedirectToAction(\"WrongParameterValue\", \"Home\");&#125; return View(M);&#125; 상세화면 -&gt; 수정화면 -&gt; 수정완료 -&gt; 다시 상세화면 이라는 시나리오상에서 void형 EditProc Controller를 사용했지만 실제로 프로시저에서는 @returnValue 라는 int형 결과를 리턴하는 상황입니다 Model에서 부터 out Parameter로 결과를 받는 변수를 받아왔으며 실제 EditProc Controller는1return RedirectToAction(\"ViewInfo\", new &#123; memId = dto.memId, viewParam = param &#125;);를 리턴합니다, 이때 ViewBag으로 결과값을 유지할 줄…았았습니다 이게 저에게는 애매한 부분이었어서 TempData로 경했던 과정과 이유를 남겨놓습니다.html bootstrap template 같은거 찾아보면 1회 휘발성 notification box 등을 많이 제공하더라고요 PHP나 Classic ASP같은거로 작업한다고 하면 catch처리를 했던 기억이 있네요…왜 그렇게 무식하게 했었을까요….그게 더 공수가 들어갔거든요..각설하고 View.cshtml에서view.cshtml1resultNum TempData : @TempData[\"resultNum\"]이렇게 TempData를 호출하면 새로고침시 정보가 사라지는 현상을 볼 수 있습니다…여기서 TempData의 구간은 Controller Controller 이렇게 명시되어 있습니다, ViewBag, ViewData와는 확실히 용도가 분리되어있습니다.TempData.Keep 등으로 생명 주기를 연장도 가능합니다, 그런데..특별한 사유가 아니라면 사용할 일이 없어보이네요.사실 말이 거창합니다만..아래와같은 시나리오 입니다..","categories":[{"name":"Web","slug":"Web","permalink":"https://lenscloth-ko.github.io.git/categories/Web/"},{"name":"ASP.Net MVC","slug":"Web/ASP-Net-MVC","permalink":"https://lenscloth-ko.github.io.git/categories/Web/ASP-Net-MVC/"}],"tags":[{"name":"MVC4","slug":"MVC4","permalink":"https://lenscloth-ko.github.io.git/tags/MVC4/"},{"name":"TempData","slug":"TempData","permalink":"https://lenscloth-ko.github.io.git/tags/TempData/"},{"name":"C#","slug":"C","permalink":"https://lenscloth-ko.github.io.git/tags/C/"}]},{"title":"MSSQL-sp_send_dbmail(Transact-SQL)","slug":"MSSQL-sp-send-dbmail-Transact-SQL","date":"2015-12-02T15:44:07.000Z","updated":"2018-12-17T15:50:21.203Z","comments":true,"path":"2015/12/03/MSSQL-sp-send-dbmail-Transact-SQL/","link":"","permalink":"https://lenscloth-ko.github.io.git/2015/12/03/MSSQL-sp-send-dbmail-Transact-SQL/","excerpt":"","text":"MSSQL에서 자동메일을 특별한 양식없이 알림성으로 받기 좋은 방법이 있습니다, sp_send_dbmail 이라고 하는 놈인데요 이게 express버전에서는 메뉴가 없습니다, 정품을 사용하고 설치옵션에서 해당사항을 체크해야 보이더라고요데이터베이스 메일 &gt; 데이터베이스 메일구성 에서 없으면 등록하면 됩니다설정은 끝입니다, POP3 설정이랑 비슷하죠? 당연히 SMTP설정은 되어있어야 합니다.SQL Server 에이전트 설정을 해주시면 됩니다 이제이후 Batch Job을 걸어서 호출하는 방식 입니다.1234567891011121314151617181920212223242526272829303132333435363738394041sp_configure 'show advanced options', 1sp_configure 'show advanced options', 1goreconfiguregosp_configure 'Database Mail XPs',1goreconfigurego use msdbgo declare @body_str varchar(2000); set @body_str = '메일이 ' + @@SERVERNAME + '로 부터 발송되었습니다.'set @body_str = @body_str + ''set @body_str = @body_str + '발송 시간 : ' + cast(getdate() as varchar(20)) + ''set @body_str = @body_str + '발송 머신 : ' + HOST_NAME() + ''set @body_str = @body_str + ''set @body_str = @body_str + '감사합니다.' exec msdb.dbo.sp_send_dbmail @profile_name = 'UserEmailSender' ,@recipients = 'jklee@wylie.co.kr' ,@subject = '데이터베이스 메일 보내기 테스트' ,@body = @body_str ,@body_format = 'html'; ----------결과조회 use msdb select *from sysmail_mailitems select *from sysmail_log결국 메일에 따라서 스팸으로 가기도 하겠지만 양식 맞추는게 노가다성으로 보여지긴 합니다만 저는 이거 하나로 매일 받아야하는 알림을 약 2년여간 아주 잘 활용했었습니다.","categories":[{"name":"DB","slug":"DB","permalink":"https://lenscloth-ko.github.io.git/categories/DB/"},{"name":"MSSQL","slug":"DB/MSSQL","permalink":"https://lenscloth-ko.github.io.git/categories/DB/MSSQL/"}],"tags":[{"name":"db mail","slug":"db-mail","permalink":"https://lenscloth-ko.github.io.git/tags/db-mail/"},{"name":"SP_SEND_DBMAIL","slug":"SP-SEND-DBMAIL","permalink":"https://lenscloth-ko.github.io.git/tags/SP-SEND-DBMAIL/"}]},{"title":"MS Outlook Email 관리 AddIn - 4","slug":"MS-Outlook-Email-관리-AddIn-4","date":"2015-10-25T15:16:38.000Z","updated":"2018-12-17T15:42:25.896Z","comments":true,"path":"2015/10/26/MS-Outlook-Email-관리-AddIn-4/","link":"","permalink":"https://lenscloth-ko.github.io.git/2015/10/26/MS-Outlook-Email-관리-AddIn-4/","excerpt":"","text":"크흛..정말 별거 아니네요…그래도 좋은 공부였습…크흛..ㅠㅠ","categories":[{"name":"C#.Net","slug":"C-Net","permalink":"https://lenscloth-ko.github.io.git/categories/C-Net/"},{"name":"VSTO","slug":"C-Net/VSTO","permalink":"https://lenscloth-ko.github.io.git/categories/C-Net/VSTO/"}],"tags":[{"name":"MS Office AddIn","slug":"MS-Office-AddIn","permalink":"https://lenscloth-ko.github.io.git/tags/MS-Office-AddIn/"},{"name":"Outlook","slug":"Outlook","permalink":"https://lenscloth-ko.github.io.git/tags/Outlook/"}]},{"title":"MS Outlook Email 관리 AddIn - 3","slug":"MS-Outlook-Email-관리-AddIn-3","date":"2015-10-24T15:16:38.000Z","updated":"2018-12-17T15:33:08.616Z","comments":true,"path":"2015/10/25/MS-Outlook-Email-관리-AddIn-3/","link":"","permalink":"https://lenscloth-ko.github.io.git/2015/10/25/MS-Outlook-Email-관리-AddIn-3/","excerpt":"","text":"ManageTaskPeneRibbon 메뉴로 I/F는 XML로 XML은 Web프로젝트 얼른 하나 만들어서 거기서 대충 관리하는 식으로 만들었습니다..","categories":[{"name":"C#.Net","slug":"C-Net","permalink":"https://lenscloth-ko.github.io.git/categories/C-Net/"},{"name":"VSTO","slug":"C-Net/VSTO","permalink":"https://lenscloth-ko.github.io.git/categories/C-Net/VSTO/"}],"tags":[{"name":"MS Office AddIn","slug":"MS-Office-AddIn","permalink":"https://lenscloth-ko.github.io.git/tags/MS-Office-AddIn/"},{"name":"Outlook","slug":"Outlook","permalink":"https://lenscloth-ko.github.io.git/tags/Outlook/"}]},{"title":"MS Outlook Email 관리 AddIn - 2","slug":"MS-Outlook-Email-관리-AddIn-2","date":"2015-10-23T15:16:38.000Z","updated":"2018-12-17T15:33:05.166Z","comments":true,"path":"2015/10/24/MS-Outlook-Email-관리-AddIn-2/","link":"","permalink":"https://lenscloth-ko.github.io.git/2015/10/24/MS-Outlook-Email-관리-AddIn-2/","excerpt":"","text":"이런식으로..새 전자 메일 작성시 우측에 트리구조로…넣습니다..벼..별거 아닌듯 보입니다 ㅠㅠ","categories":[{"name":"C#.Net","slug":"C-Net","permalink":"https://lenscloth-ko.github.io.git/categories/C-Net/"},{"name":"VSTO","slug":"C-Net/VSTO","permalink":"https://lenscloth-ko.github.io.git/categories/C-Net/VSTO/"}],"tags":[{"name":"MS Office AddIn","slug":"MS-Office-AddIn","permalink":"https://lenscloth-ko.github.io.git/tags/MS-Office-AddIn/"},{"name":"Outlook","slug":"Outlook","permalink":"https://lenscloth-ko.github.io.git/tags/Outlook/"}]},{"title":"MS Outlook Email 관리 AddIn - 1","slug":"MS-Outlook-Email-관리-AddIn-1","date":"2015-10-22T15:16:38.000Z","updated":"2018-12-17T15:20:47.573Z","comments":true,"path":"2015/10/23/MS-Outlook-Email-관리-AddIn-1/","link":"","permalink":"https://lenscloth-ko.github.io.git/2015/10/23/MS-Outlook-Email-관리-AddIn-1/","excerpt":"","text":"목적 나의 삽질 능력 테스트 사용대상 일반 회사원중 아웃룩을 다시깔때 깊은 빡침을 느끼는자 개발환경 VS2015 VSTO Tools for Office 2015 예상 아웃룩에 메뉴를 추가 기타 웹 등에서 관리된 메일을 불러와서 사용 되..될까..??","categories":[{"name":"C#.Net","slug":"C-Net","permalink":"https://lenscloth-ko.github.io.git/categories/C-Net/"},{"name":"VSTO","slug":"C-Net/VSTO","permalink":"https://lenscloth-ko.github.io.git/categories/C-Net/VSTO/"}],"tags":[{"name":"MS Office AddIn","slug":"MS-Office-AddIn","permalink":"https://lenscloth-ko.github.io.git/tags/MS-Office-AddIn/"},{"name":"Outlook","slug":"Outlook","permalink":"https://lenscloth-ko.github.io.git/tags/Outlook/"}]},{"title":"ASP.Net MVC4 BundleConfig에서 min.js 혹은 사용자 지정 css 등이 적용되지 않을 때","slug":"ASP-Net-MVC4-BundleConfig에서-min-js-혹은-사용자-지정-css-등이-적용되지-않을-때","date":"2014-05-28T15:08:21.000Z","updated":"2018-12-17T15:14:24.639Z","comments":true,"path":"2014/05/29/ASP-Net-MVC4-BundleConfig에서-min-js-혹은-사용자-지정-css-등이-적용되지-않을-때/","link":"","permalink":"https://lenscloth-ko.github.io.git/2014/05/29/ASP-Net-MVC4-BundleConfig에서-min-js-혹은-사용자-지정-css-등이-적용되지-않을-때/","excerpt":"","text":"BundleConfig class123456public static void RegisterBundles(BundleCollection bundles)&#123; bundles.Add(new ScriptBundle(\"~/Scripts/jquery\") .Include(\"~/Scripts/jquery-1.8.0.js\") .Include(\"~/Scripts/jquery.tmpl.min.js\")); &#125; html 코드12345&lt;html&gt; &lt;head&gt; @Scripts.Render(\"~/Scripts/jquery\") &lt;/head&gt;&lt;body&gt;test&lt;/body&gt;&lt;/html&gt; html 랜더링 후123456&lt;html&gt; &lt;head&gt; &lt;script src=\"/Scripts/jquery-1.8.0.js\"&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt;test&lt;/body&gt;&lt;/html&gt; 이렇게 BundleConfig에서 지정한 local이나 외부 js나 css파일이 랜더링 면서 동작을 안하는 듯한?? 모습이 보일때가 있더라고요.. 이거 debug모드 혹은 localhost에서는..이런 버그가 있답니다…참고하세요","categories":[{"name":"Web","slug":"Web","permalink":"https://lenscloth-ko.github.io.git/categories/Web/"},{"name":"ASP.Net MVC","slug":"Web/ASP-Net-MVC","permalink":"https://lenscloth-ko.github.io.git/categories/Web/ASP-Net-MVC/"}],"tags":[{"name":"MVC4","slug":"MVC4","permalink":"https://lenscloth-ko.github.io.git/tags/MVC4/"},{"name":"BundleConfig","slug":"BundleConfig","permalink":"https://lenscloth-ko.github.io.git/tags/BundleConfig/"}]},{"title":"MSSQL-CTE 재귀쿼리 - MSSQL2005 이상","slug":"MSSQL-CTE-재귀쿼리-MSSQL2005-이상","date":"2012-12-06T15:03:47.000Z","updated":"2018-12-17T15:06:32.589Z","comments":true,"path":"2012/12/07/MSSQL-CTE-재귀쿼리-MSSQL2005-이상/","link":"","permalink":"https://lenscloth-ko.github.io.git/2012/12/07/MSSQL-CTE-재귀쿼리-MSSQL2005-이상/","excerpt":"","text":"트리구조 등을 표현하려고 사용하다가, 메뉴나 코드관리에서 자주 사용했던 쿼리이며 List&lt;&gt;형태를 가져오기 위해 써먹었던놈입니다. 123456789101112131415161718WITH 지정이름CTE(menuCode, menuName, isPopup, menuURL, sortNo, menuLevel)AS(SELECT menuCode, menuName, isPopup, menuURL, sortNo, 1 AS menuLevelFROM 테이블명 WITH(NOLOCK)WHERE 조건 UNION ALL SELECT A.menuCode, A.menuName, A.isPopup, A.menuURL, A.sortNo, menuLevel + 1 AS menuLevelFROM 테이블명 A WITH(NOLOCK) INNER JOIN지정이름CTE B ON A.menuParentCode = B.menuCodeWHERE 조건)SELECT menuCode, menuName, isPopup, menuURL, sortNo, menuLevelFROM 지정이름CTE WITH(NOLOCK)ORDER BY sortNoOPTION (MAXRECURSION 10) 첫번째 호출되는 결과집합(UNION ALL)을 만들고 하단 결과집합이 빈 집합이 될때까지 반복하는 원리입니다.","categories":[{"name":"DB","slug":"DB","permalink":"https://lenscloth-ko.github.io.git/categories/DB/"},{"name":"MSSQL","slug":"DB/MSSQL","permalink":"https://lenscloth-ko.github.io.git/categories/DB/MSSQL/"}],"tags":[{"name":"CTE","slug":"CTE","permalink":"https://lenscloth-ko.github.io.git/tags/CTE/"},{"name":"재귀쿼리","slug":"재귀쿼리","permalink":"https://lenscloth-ko.github.io.git/tags/재귀쿼리/"}]},{"title":"MSSQL Bulk Insert","slug":"MSSQL-Bulk-Insert","date":"2012-10-18T14:54:16.000Z","updated":"2018-12-17T15:02:41.364Z","comments":true,"path":"2012/10/18/MSSQL-Bulk-Insert/","link":"","permalink":"https://lenscloth-ko.github.io.git/2012/10/18/MSSQL-Bulk-Insert/","excerpt":"","text":"참고링크 12345678910111213BEGIN TRANBULK INSERT 디비명.소유자.테이블명 FROM '경로를 포함한 파일명'WITH (DATAFILETYPE = 'char', --이건 텍스트 형태로 한다는거입니다.FIELDTERMINATOR = '\\t', --필드 구분자가 TAB으로 분리되어있는 형식입니다.ROWTERMINATOR = '\\r\\n', --행 구분자가 케리지 리턴으로 되어있는 형태입니다.FIRSTROW = 2 --여긴 첫번째 행은 해당 필드명이 넘어오기때문에 2번째부터 읽자 머 이런의미로 넣은겁니다--KEEPNULLS)IF(@@ERROR &lt;&gt; 0)ROLLBACK TRANELSECOMMIT TRAN 사용법은 간단합니다.270만건 기준 15초 평균 정도가 소요되네요.","categories":[{"name":"DB","slug":"DB","permalink":"https://lenscloth-ko.github.io.git/categories/DB/"},{"name":"MSSQL","slug":"DB/MSSQL","permalink":"https://lenscloth-ko.github.io.git/categories/DB/MSSQL/"}],"tags":[{"name":"Bulk Insert","slug":"Bulk-Insert","permalink":"https://lenscloth-ko.github.io.git/tags/Bulk-Insert/"}]},{"title":"ASP RSS 읽어오기","slug":"ASP-RSS-읽어오기","date":"2008-08-21T14:46:39.000Z","updated":"2018-12-17T14:47:35.188Z","comments":true,"path":"2008/08/21/ASP-RSS-읽어오기/","link":"","permalink":"https://lenscloth-ko.github.io.git/2008/08/21/ASP-RSS-읽어오기/","excerpt":"","text":"12345678910111213141516171819202122232425262728Dim xmlHttpSet xmlHttp = Server.CreateObject(\"MSXML2.XMLHTTP.3.0\")xmlHttp.Open \"Get\", RSS주소(받아들일), falsexmlHttp.Send()'받아서 저장 ( 이게 요즘은 익숙하져? ㅋㅋ )Dim RSSXMLRSSXML = xmlHttp.ResponseText'분할을 위해 DOM객채로 저장합니다 ( 안그래도 상관없는데... 이게더 좋은거 같습니다 )Dim xmlDOMSet xmlDOM = Server.CreateObject(\"MSXML2.DomDocument.3.0\")xmlDOM.async = falsexmlDOM.LoadXml(RSSXML)'요건 센스 ㅋㅋSet xmlHttp = Nothing'DOM으로 저장한 객체중 item 노드로 뽑아내고 생성했던 객체는 소멸합니다.Dim RSSItemsSet RSSItems = xmlDOM.getElementsByTagName(\"item\")Set xmlDOM = Nothing'이 이후에 이제 배열의 갯수 - 1개로 돌려서 'items(i,0) : title'items(i,1) : link'items(i,2) : description'items(i,3) : category'items(i,4) : author'items(i,5) : guid'items(i,6) : comments'items(i,7) : pubdate","categories":[{"name":"Web","slug":"Web","permalink":"https://lenscloth-ko.github.io.git/categories/Web/"},{"name":"Classic ASP","slug":"Web/Classic-ASP","permalink":"https://lenscloth-ko.github.io.git/categories/Web/Classic-ASP/"}],"tags":[{"name":"RSS","slug":"RSS","permalink":"https://lenscloth-ko.github.io.git/tags/RSS/"},{"name":"Classic ASP","slug":"Classic-ASP","permalink":"https://lenscloth-ko.github.io.git/tags/Classic-ASP/"},{"name":"ASP","slug":"ASP","permalink":"https://lenscloth-ko.github.io.git/tags/ASP/"}]},{"title":"Google AdSense 수입!","slug":"Google-AdSense-수입","date":"2007-12-04T14:49:26.000Z","updated":"2018-12-17T14:53:23.835Z","comments":true,"path":"2007/12/04/Google-AdSense-수입/","link":"","permalink":"https://lenscloth-ko.github.io.git/2007/12/04/Google-AdSense-수입/","excerpt":"","text":"요즘들어 수입이 영..;;-_- 역시 홈페이지 뻑쩍지근하게 다시 만들어봐야겠구나 ㅠㅠ언제만들어서 언제다 정리해서 언제다 옮기냐~! ㅠㅠ","categories":[{"name":"Web","slug":"Web","permalink":"https://lenscloth-ko.github.io.git/categories/Web/"}],"tags":[{"name":"Google AdSense","slug":"Google-AdSense","permalink":"https://lenscloth-ko.github.io.git/tags/Google-AdSense/"}]},{"title":"ASP RSS 만들기","slug":"ASP-RSS-만들기","date":"2007-11-09T14:25:10.000Z","updated":"2018-12-17T14:48:17.994Z","comments":true,"path":"2007/11/09/ASP-RSS-만들기/","link":"","permalink":"https://lenscloth-ko.github.io.git/2007/11/09/ASP-RSS-만들기/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091Response.ContentType = \"text/xml\"Set xmlPars = Server.CreateObject(\"Msxml2.DOMDocument\")'여기서 부터 rss 정보를 담는다.Set rss = xmlPars.CreateElement(\"rss\")rss.setAttribute \"version\", \"2.0\"rss.setAttribute \"xmlns:dc\", \"http://purl.org/dc/elements/1.1/\"rss.setAttribute \"xmlns:sy\", \"http://purl.org/rss/1.0/modules/syndication/\"rss.setAttribute \"xmlns:admin\", \"http://webns.net/mvcb/\"rss.setAttribute \"xmlns:rdf\", \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"xmlPars.AppendChild(rss)'&lt;channel&gt; 시작Set Channel = xmlPars.CreateElement(\"channel\")rss.AppendChild(Channel) '&lt;title&gt;정보Set title = xmlPars.CreateElement(\"title\")Channel.AppendChild(title)Channel.childnodes(0).text = \"사이트명(체널제목으로 들어가는 부분)\" '제목'&lt;link&gt;정보Set channel_link = xmlPars.CreateElement(\"link\")Channel.AppendChild(channel_link)Channel.childnodes(1).text = \"사이트의 도메인 혹은 체널제공 카테고리의 메인주소\" '주소 '&lt;description&gt;정보Set description = xmlPars.CreateElement(\"description\")Channel.AppendChild(description)Channel.childnodes(2).text = \"사이트 설명\" '설명 '&lt;dc:language&gt;정보Set language = xmlPars.CreateElement(\"dc:language\")Channel.AppendChild(language)Channel.childnodes(3).text = \"ko\" '언어 '&lt;image&gt;정보'Set image = xmlPars.CreateElement(\"image\")'Channel.AppendChild(image) '이미지 정보에 들어갈 것들'set i_title = xmlPars.CreateElement(\"title\")'set i_url = xmlPars.CreateElement(\"url\")'set i_width = xmlPars.CreateElement(\"width\")'set i_height = xmlPars.CreateElement(\"height\")'image.AppendChild(i_title)'image.AppendChild(i_url)'image.AppendChild(i_width)'image.AppendChild(i_height)'image.childnodes(0).text = \"이미지 제목\"'image.childnodes(1).text = \"이미지 경로\"'image.childnodes(2).text = \"이미지 가로 사이즈\"'image.childnodes(3).text = \"이미지 세로 사이즈\" '여기서부터 내용'우선 데이터를 읽어오자objconn = \"Provider=SQLOLEDB; Data Source=DB주소; Initial Catalog=DB명; User ID=아이디; Password=비밀번호;\"SQL = \"select top 50 필드1, 필드2 … \"SQL = SQL &amp; \" , 필드x, 필드y …\"SQL = SQL &amp; \" from 테이블명 \"SQL = SQL &amp; \" where 조건 \"SQL = SQL &amp; \" order by 어쩌구 desc \"set rs = Server.CreateObject(\"ADODB.Recordset\")rs.Open SQL,objconn,3'여기서 부터 루프를 돌리자.Do until rs.EOF'이 부분에서 데이터 가공 및 함수호출을 이용한 정보 가공을 하면 된다'ex) Name = rs(1) 이런식으로 ㅋㅋㅋ'&lt;item&gt; 이라는 노드를 추가Set item = xmlPars.CreateElement(\"item\")Channel.AppendChild(item)'여기서부터 해당 포스트의 세부 정보를 출력set title = xmlPars.CreateElement(\"title\") 'set link = xmlPars.CreateElement(\"link\")set description = xmlPars.CreateElement(\"description\")set dcdate = xmlPars.CreateElement(\"dc:date\")set dcsubject = xmlPars.CreateElement(\"dc:subject\")item.AppendChild(title)item.AppendChild(link)item.AppendChild(description)item.AppendChild(dcdate)item.AppendChild(dcsubject)item.childnodes(0).text = \"1개의 포스트(게시글)의 제목\" '제목item.childnodes(1).text = \"고유 주소\" '브라우저 주소입력창에 쳤을때 바로 그 페이지가 나오게끔 하는 주소item.childnodes(2).text = \"본문내용\" '내용 필드item.childnodes(3).text = \"등록일\" '날짜 필드item.childnodes(4).text = \"카테고리 혹은 분류할 수 있는 테그명 등…\" '분류 필드rs.movenextloop'마지막으로 최종적으로 뿌려주자.Response.Write xmlPars.xmlrs.closeset rs = nothingSet xmlPars = nothing","categories":[{"name":"Web","slug":"Web","permalink":"https://lenscloth-ko.github.io.git/categories/Web/"},{"name":"Classic ASP","slug":"Web/Classic-ASP","permalink":"https://lenscloth-ko.github.io.git/categories/Web/Classic-ASP/"}],"tags":[{"name":"RSS","slug":"RSS","permalink":"https://lenscloth-ko.github.io.git/tags/RSS/"},{"name":"Classic ASP","slug":"Classic-ASP","permalink":"https://lenscloth-ko.github.io.git/tags/Classic-ASP/"},{"name":"ASP","slug":"ASP","permalink":"https://lenscloth-ko.github.io.git/tags/ASP/"}]}]}